//PERSONALITY based messages are defined here. This includes both text and voice based responses since thoses will need to be different but related.
var quickReplies = ["Today", "Tomorrow", "Next week"];
var txtResponses  = {
    "casual" :{
        "msg1" :"Got it!üòé When is this meeting happenin'?",
        "msg2" :"Alrighty üëåüèΩ So when would you like to have this meeting?"
    },
    "neutral" : {
        "msg1" :"OK, when would you like to schedule this?",
        "msg2" :"When should this meeting be set for?"
    },
    "professional" : {
        "msg1" :"When would you like to schedule this meeting?",
        "msg2" :"When would you like to have this meeting?"
    }

};
var voiceResponses  = {
    "casual" :{
        "msg1" :"When is this meeting happenin'?",
        "msg2" :"When would you like to have this meeting?"
    },
    "neutral" : {
        "msg1" :"When would you like to schedule this?",
        "msg2" :"When should this meeting be set for?"
    },
    "professional" : {
        "msg1" :"When would you like to schedule this meeting?",
        "msg2" :"When would you like to have this meeting?"
    }

};
//Randomly Select one of the messages based on the bot's current personality setting.
var txtmsg ="";
var voicemsg ="";
var typeOfPersonality =context.session.BotUserSession.currentPersonality;
if(typeOfPersonality){
    //If there is a personality defined randomly choose one from that personality...
    var max =Object.keys(txtResponses[typeOfPersonality]).length;
    var min=1;
    var rndMsgNum = Math.floor(Math.random() * (max - min + 1)) + min;
} else {
    //If there is no personality defined force neutral personality and randomly choose one from that personality...
    typeOfPersonality ="neutral";
    var max =Object.keys(txtResponses[typeOfPersonality]).length;
    var min=1;
    var rndMsgNum = Math.floor(Math.random() * (max - min + 1)) + min;
}
    txtmsg = txtResponses[typeOfPersonality][("msg"+rndMsgNum)];
    voicemsg = voiceResponses[typeOfPersonality][("msg"+rndMsgNum)];
//Modify the payload and construct the final message JSON to send to the client as the response.
var message = {
    "type": "template",
    "payload": {
   	        "text": "Cross checking calendars. Please wait...",
    		"speech_hint": "I am checking your files now. Give me a moment..."
    }
};

//temporarily commenting bcz i getting some issue
message.payload.text=txtmsg;
message.payload.speech_hint=voicemsg;
//Check if quick replies have been defined above. If so, add those to the message payload.
if(quickReplies){
    message.payload.template_type="quick_replies";
    message.payload.quick_replies=[];
    for (i = 0; i < quickReplies.length; i++) {
    //if only text needs to diplayed
    var quickReply = {
        "content_type": "text",
        "title": quickReplies[i],
        "payload":quickReplies[i]
    };
    message.payload.quick_replies.push(quickReply);
    }
}
//If SDK, send special JSON
print(JSON.stringify(message));
//If other channel, send plain text.
//print(txtmsg);
